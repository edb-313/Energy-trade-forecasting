summarize_at(vars(`Amount of total Petroleum Porducts (Thousand Barrels)`), sum) %>%
ungroup()
################################################################################
#Reliance on Russian gas
raw_rel_rusoil <- read_csv("https://raw.githubusercontent.com/edb-313/Energy-trade-forecasting/main/Data/csv/Monthly_Reliance_on_Russian_Oil.csv", skip = 1)
colnames(raw_rel_rusoil)
rel_rusoil <- raw_rel_rusoil %>%
pivot_longer(cols = -...1,
names_to = 'Date',
values_to = 'Total Oil Imports from Russia / Total Oil Imports (%)')
rel_rusoil <- rel_rusoil %>%
rename(Country = ...1) %>%
mutate(Date = lubridate::dmy(Date)) %>%
select("Date","Country","Total Oil Imports from Russia / Total Oil Imports (%)")
ts_rel_rusoil <- rel_rusoil %>%
as_tsibble(
index = Date,
key = Country)
oecd_relrus <- ts_rel_rusoil %>%
filter(Country %in% oecd_europe)
oecd_relrus %>% slice_sample(n=10)
################################################################################
#Total Natural Gas Exports by Destination
raw_nat_gas <- read.csv('https://raw.githubusercontent.com/edb-313/Energy-trade-forecasting/main/Data/csv/Natural%20Gas%20Exports%20by%20Country_EIA.csv',header=TRUE , check.names=FALSE, skip = 2)
# drop columns 2-3, 6-8, 54 and 57-72
raw_nat_gas <- subset(raw_nat_gas, select = -c(2:3, 6:8,54, 57:72))
raw_nat_gas[is.na(raw_nat_gas)] <- 0
#cimbining exports to the same countries
nat_gas <- raw_nat_gas %>%
mutate(Mexico = `U.S. Natural Gas Pipeline Exports to Mexico (MMcf)` + `Liquefied U.S. Natural Gas Exports by Truck to Mexico (Million Cubic Feet)`,
Canada = `U.S. Natural Gas Pipeline Exports to Canada (MMcf)` + `Liquefied U.S. Natural Gas Exports by Truck to Canada (Million Cubic Feet)`)
#removing duplicate columns
nat_gas <- nat_gas[, !(names(nat_gas) %in% c('U.S. Natural Gas Pipeline Exports to Mexico (MMcf)',
'Liquefied U.S. Natural Gas Exports by Truck to Mexico (Million Cubic Feet)',
'U.S. Natural Gas Pipeline Exports to Canada (MMcf)',
'Liquefied U.S. Natural Gas Exports by Truck to Canada (Million Cubic Feet)'))]
colnames(nat_gas) <- gsub(pattern = ".*(to\\s)", "", colnames(nat_gas))
colnames(nat_gas) <- gsub("\\(.*?\\)", "", colnames(nat_gas))
#pivoting data
gastemp <- nat_gas %>%
pivot_longer(cols = -Date,
names_to = 'Destination country',
values_to = 'Amount of Natural gas (MMcf)')
#converting to tsibbles
library(stringr) #for triming the strings
gastemp <- gastemp %>%
drop_na(Date) %>%
mutate(Date = as.Date(Date)) %>%
mutate(`Destination country` = str_trim(`Destination country`))
gastemp <- gastemp %>%
group_by(Date, `Destination country`) %>%
summarize_at(vars(`Amount of Natural gas (MMcf)`), sum) %>%
ungroup() %>%
drop_na(Date)
ts_nat_gas <- gastemp %>%
mutate(Date = yearmonth(Date)) %>%
as_tsibble(
index = Date,
key = `Destination country`
)
oecd_nat_gas <- ts_nat_gas %>%
filter(`Destination country` %in% oecd_europe) %>%
filter(Date >= as.Date("2010-01-15"), Date <= as.Date("2023-01-15"))
oecd_nat_gas_agg <- oecd_nat_gas %>%
index_by(Date) %>%
summarize_at(vars(`Amount of Natural gas (MMcf)`), sum) %>%
ungroup()
oecd_nat_gas_agg <- oecd_nat_gas_agg %>%
mutate(`Amount of Natural gas (BOE)` = `Amount of Natural gas (MMcf)` * 1000 / 6000 )
oecd_nat_gas_agg <- oecd_nat_gas_agg %>%
select(Date, `Amount of Natural gas (BOE)`)
oecd_nat_gas_agg
oecd_merged <- left_join(oecd_nat_gas_agg, oecd_oil_prod_agg, by = "Date") %>%
left_join(oecd_crude_oil_agg, by = "Date")
total_exp_oecd <- oecd_merged %>%
pivot_longer(cols = -Date, names_to = "Export Type", values_to = "Amount")
total_exp_oecd
total_exp_oecd %>% ggplot(
aes(Date,Amount,color = `Export Type`)) +
geom_line()+
labs(x = "Date", y = "Amount")+
theme(legend.position = "bottom")
total_exp_oecd
lambda1 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(Amount)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
lambda1
nat_gas_bx <-total_exp_oecd %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(Amount)) %>%
mutate(Total_Exports = box_cox(Total_Exports + 1, lambda1))
crude_oil_bx
crude_oil_agg %>%
autoplot(`Amount of Crude Oil (Thousand Barrels)`)
crude_oil_fit
crude_oil_fit <- crude_oil_agg %>%
model(
Seasonal_naive = SNAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Naive = NAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Drift = RW(`Amount of Crude Oil (Thousand Barrels)` ~ drift()),
Mean = MEAN(`Amount of Crude Oil (Thousand Barrels)`)
)
crude_oil_agg %>%
autoplot(`Amount of Crude Oil (Thousand Barrels)`)
knitr::opts_chunk$set(echo = FALSE)
oecd_nat_gas <- ts_nat_gas %>%
filter(`Destination country` %in% oecd_europe) %>%
filter(Date >= as.Date("2010-01-15"), Date <= as.Date("2023-01-15"))
oecd_crude_oil_agg %>%
autoplot(`Amount of Crude Oil (Thousand Barrels)`)
crude_oil_fit <- crude_oil_agg %>%
model(
Seasonal_naive = SNAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Naive = NAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Drift = RW(`Amount of Crude Oil (Thousand Barrels)` ~ drift()),
Mean = MEAN(`Amount of Crude Oil (Thousand Barrels)`)
)
crude_oil_fit <- oecd_crude_oil_agg %>%
model(
Seasonal_naive = SNAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Naive = NAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Drift = RW(`Amount of Crude Oil (Thousand Barrels)` ~ drift()),
Mean = MEAN(`Amount of Crude Oil (Thousand Barrels)`)
)
crude_oil_fit
crude_oil_fc <- crude_oil_fit %>%
forecast(h = 12)
crude_oil_fc %>%
print(n = 36)
crude_oil_fc %>%
autoplot(crude_oil_agg, level = NULL) +
ggtitle("Forecasts for U.S. Crude Oil exports to OECD Europe") +
xlab("Year") + ylab("Thousand Barrels") +
guides(colour = guide_legend(title = "Forecast"))
crude_oil_fc %>%
autoplot(oecd_crude_oil_agg, level = NULL) +
ggtitle("Forecasts for U.S. Crude Oil exports to OECD Europe") +
xlab("Year") + ylab("Thousand Barrels") +
guides(colour = guide_legend(title = "Forecast"))
fit_crude_oil <- oecd_crude_oil_agg %>%
model(SNAIVE(`Amount of Crude Oil (Thousand Barrels)`))
fit_crude_oil %>% augment() %>% tail()
augment(fit_crude_oil) %>%
ggplot(aes(x = oecd_crude_oil_agg$Date)) +
geom_line(aes(y = oecd_crude_oil_agg$`Amount of Crude Oil (Thousand Barrels)`, colour = "Data")) +
geom_line(aes(y = .fitted, colour = "Fitted")) #possible forecast inaccuracy due to Covid-19
oecd_crude_oil_agg
crude_oil_train <- crude_oil_agg %>%
filter(Date >= as.Date("2015-06-01"), Date <= as.Date("2021-06-01"))
crude_oil_train <- oecd_crude_oil_agg %>%
filter(Date >= as.Date("2015-06-01"), Date <= as.Date("2021-06-01"))
crude_oil_fit <- crude_oil_train %>%
model(
Mean = MEAN(`Amount of Crude Oil (Thousand Barrels)`),
Naive = NAIVE(`Amount of Crude Oil (Thousand Barrels)`),
SNaive = SNAIVE(`Amount of Crude Oil (Thousand Barrels)`),
Drift = RW(`Amount of Crude Oil (Thousand Barrels)` ~ drift())
)
crude_oil_fit
crude_oil_fc <- crude_oil_fit %>%
forecast(h = 36)
accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE)
crude_oil_fc %>%
autoplot(
crude_oil_agg,
level = NULL
) +
labs(
y = "Thousand Barrels",
title = "Forecasts for U.S. Crude Oil exports to OECD Europe"
) +
guides(colour = guide_legend(title = "Forecast"))
crude_oil_fc %>%
autoplot(
oecd_crude_oil_agg,
level = NULL
) +
labs(
y = "Thousand Barrels",
title = "Forecasts for U.S. Crude Oil exports to OECD Europe"
) +
guides(colour = guide_legend(title = "Forecast"))
naive_crude_oil <- crude_oil_train %>%
model(NAIVE(`Amount of Crude Oil (Thousand Barrels)`))
augment(naive_crude_oil) %>%
ggplot(aes(x = crude_oil_train$Date))+
geom_line(aes(y = crude_oil_train$`Amount of Crude Oil (Thousand Barrels)`, colour = 'Data')) +
geom_abline(aes(y = .ftted, colour = 'Fitted'))
#All residual diagnostic graphs
gg_tsresiduals(naive_crude_oil)
augment(naive_crude_oil) %>%
autoplot(.resid) +
labs(y = 'Thousand Barrels',
title = 'Residuals from the Naive model')
augment(naive_crude_oil) %>%
ggplot(aes(x = .resid)) +
geom_histogram(bins = 50) +
labs(title = 'Histogram of naive model residuals')
augment(naive_crude_oil) %>%
ACF(.resid) %>%
autoplot() + labs(title = 'ACF of residuals')
augment(naive_crude_oil) %>%
features(.resid, ljung_box, lag = 50)
#do not reject null hypothesis of no autocorrelation (H0 - no autocorrelation in the residuals)
accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE)
# Summary statistics for the "auto_crude_ets" model residuals
summary(crude_fit_residuals)
# Compute lambda using guerrero method for Crude Oil
lambda1 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Crude Oil (Thousand Barrels)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
# Apply Box-Cox transformation
crude_oil_agg <- total_exp_oecd %>% filter(year(Date) >= 2016) %>%
filter(`Export Type` == "Amount of Crude Oil (Thousand Barrels)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
mutate(Total_Exports = box_cox(Total_Exports, lambda = lambda1))
# Compute lambda using guerrero method for Natural gas
lambda3 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
# Compute lambda using guerrero method for Crude Oil
lambda1 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Crude Oil (Thousand Barrels)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
# Apply Box-Cox transformation
crude_oil_agg <- total_exp_oecd %>% filter(year(Date) >= 2016) %>%
filter(`Export Type` == "Amount of Crude Oil (Thousand Barrels)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
mutate(Total_Exports = box_cox(Total_Exports, lambda = lambda1))
# Compute lambda using guerrero method for Natural gas
lambda3 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
# Apply Box-Cox transformation
nat_gas_agg <- total_exp_oecd %>% filter(year(Date) >= 2016) %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
mutate(Total_Exports = box_cox(Total_Exports, lambda = lambda3))
# Combine the transformed time series
combined_data <- merge(crude_oil_agg, nat_gas_agg, by = "Date", all = TRUE)
#plotting time series
#Determining the ETS Model for Crude OIL
ggplot(combined_data, aes(x = Date)) +
geom_line(aes(y = Total_Exports.x, color = "Crude Oil")) +
geom_line(aes(y = Total_Exports.y, color = "Natural Gas")) +
ylab("Amount (Transformed)") +
ggtitle("Crude Oil and Natural Gas Exports") +
scale_color_manual(values = c("Crude Oil" = "red", "Natural Gas" = "green"))
fit<-crude_oil_agg %>%
model(
additive=ETS(Total_Exports~error("A")+trend("A")+season("A")),
multiplicative = ETS(Total_Exports ~ error("M") + trend("M") + season("M")),
random1 = ETS(Total_Exports ~ error("M") + trend("A") + season("A")),
)
accuracy(fit)
accuracy(fit)
accuracy(crude_fit)
tidy(fit %>% select(additive))
#checking accuracy
accuracy(fit)
#ploting
fit %>% select(additive) %>% components() %>% autoplot() + xlab("Month")
addi_FC<-fit %>% select(additive) %>% forecast(h=36)
addi_FC %>%
autoplot(
crude_oil_agg) +
labs(
y = "Thousand Barrels",
title = "Forecasts for U.S. Crude oil exports to OECD Europe") +
guides(colour = guide_legend(title = "Forecast"))
addi_FC<-fit %>% select(additive)
accuracy(addi_FC)
addi_FC<-fit %>% select(additive) %>% forecast(h=36)
add<-fit %>% select(additive)
#ETS model selection by R
crude_fit <- crude_oil_agg %>%
model(auto_crude_ets = ETS(Total_Exports))
#checking the accuracy
report(crude_fit)
fit_cr<-ETS(crude_oil_agg)
accuracy(crude_fit)
accuracy(crude_fit,add)
accuracy(crude_fit)
add<-fit %>% select(additive)
accuracy(add)
accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE)
combined_accuracy <- accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE) %>%
bind_rows(
accuracy(add),
accuracy(crude_fit)
)
combined_accuracy
#determining best ETS model
fit<-crude_oil_agg %>%
model(
additive_ETS=ETS(Total_Exports~error("A")+trend("A")+season("A")),
multiplicative_ETS = ETS(Total_Exports ~ error("M") + trend("M") + season("M")),
random1_ETS = ETS(Total_Exports ~ error("M") + trend("A") + season("A")),
)
#checking accuracy
accuracy(fit)
print(tidy(fit),n=68)
#ploting
fit %>% select(additive) %>% components() %>% autoplot() + xlab("Month")
# Print the selected ETS model
print(crude_fit$auto_crude_ets)
tidy(crude_fit)
fit_cr<-ETS(crude_oil_agg)
fit_cr$model
accuracy(crude_fit)
report(crude_fit)
components(crude_fit) %>% autoplot()
auto_crud<-crude_fit %>% select(auto_crude_ets) %>% forecast(h=36)
auto_crud%>%
autoplot(
crude_oil_agg) +
labs(
y = "Thousand Barrels",
title = "Forecasts for U.S. Crude oil exports to OECD Europe") +
guides(colour = guide_legend(title = "Forecast"))
auto<-crude_fit %>% select(auto_crude_ets)
residuals(auto) %>% ACF(.resid) %>% autoplot()
for_crd<-crude_fit %>% forecast(h=12)
for_crd %>% autoplot()
# Obtain the residuals
crude_residuals <- residuals(crude_fit)
# Plot the residuals
plot(crude_residuals, type = "l", main = "Residuals of crude_fit Model")
accuracy(crude_fit)
combined_accuracy <- accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE) %>%
bind_rows(
accuracy(add),
accuracy(crude_fit)
)
combined_accuracy
add<-fit %>% select(additive_ETS)
combined_accuracy <- accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE) %>%
bind_rows(
accuracy(add),
accuracy(crude_fit)
)
combined_accuracy
knitr::opts_chunk$set(echo = TRUE)
# Compute lambda using guerrero method for Crude Oil
lambda1 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Crude Oil (Thousand Barrels)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
# Apply Box-Cox transformation
crude_oil_agg <- total_exp_oecd %>% filter(year(Date) >= 2016) %>%
filter(`Export Type` == "Amount of Crude Oil (Thousand Barrels)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
mutate(Total_Exports = box_cox(Total_Exports, lambda = lambda1))
# Compute lambda using guerrero method for Natural gas
lambda3 <- total_exp_oecd %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
features(Total_Exports, features = guerrero) %>%
pull(lambda_guerrero)
# Apply Box-Cox transformation
nat_gas_agg <- total_exp_oecd %>% filter(year(Date) >= 2016) %>%
filter(`Export Type` == "Amount of Natural gas (BOE)") %>%
index_by(Date) %>%
summarise(Total_Exports = sum(`Amount`)) %>%
mutate(Total_Exports = box_cox(Total_Exports, lambda = lambda3))
# Combine the transformed time series
combined_data <- merge(crude_oil_agg, nat_gas_agg, by = "Date", all = TRUE)
#plotting time series
#Determining the ETS Model for Crude OIL
ggplot(combined_data, aes(x = Date)) +
geom_line(aes(y = Total_Exports.x, color = "Crude Oil")) +
geom_line(aes(y = Total_Exports.y, color = "Natural Gas")) +
ylab("Amount (Transformed)") +
ggtitle("Crude Oil and Natural Gas Exports") +
scale_color_manual(values = c("Crude Oil" = "red", "Natural Gas" = "green"))
addi_FC %>%
autoplot(
crude_oil_agg) +
labs(
y = "Thousand Barrels",
title = "Forecasts for U.S. Crude oil exports to OECD Europe") +
guides(colour = guide_legend(title = "Forecast"))
report(crude_fit)
augment(naive_crude_oil) %>%
ggplot(aes(x = crude_oil_train$Date))+
geom_line(aes(y = crude_oil_train$`Amount of Crude Oil (Thousand Barrels)`, colour = 'Data')) +
geom_abline(aes(y = .ftted, colour = 'Fitted'))
augment(naive_crude_oil) %>%
features(.resid, ljung_box, lag = 50)
augment(mean_oil_prod) %>%
features(.resid, ljung_box, lag = 50)
nat_gas_train <- oecd_nat_gas_agg %>%
filter(Date <= as.Date("2019-01-01"))
nat_gas_train
nat_gas_fit <- nat_gas_train %>%
model(
Mean = MEAN(`Amount of Natural gas (MMcf)`),
Naive = NAIVE(`Amount of Natural gas (MMcf)`),
SNaive = SNAIVE(`Amount of Natural gas (MMcf)`),
Drift = RW(`Amount of Natural gas (MMcf)` ~ drift())
)
nat_gas_fit
nat_gas_fit
nat_gas_fit <- nat_gas_train %>%
model(
Mean = MEAN(`Amount of Natural gas (MMcf)`),
Naive = NAIVE(`Amount of Natural gas (MMcf)`),
SNaive = SNAIVE(`Amount of Natural gas (MMcf)`),
Drift = RW(`Amount of Natural gas (MMcf)` ~ drift())
)
nat_gas_train
nat_gas_fit <- nat_gas_train %>%
model(
Mean = MEAN(`Amount of Natural gas (BOE)`),
Naive = NAIVE(`Amount of Natural gas (BOE)`),
SNaive = SNAIVE(`Amount of Natural gas (BOE)`),
Drift = RW(`Amount of Natural gas (BOE))` ~ drift())
)
nat_gas_fit <- nat_gas_train %>%
model(
Mean = MEAN(`Amount of Natural gas (BOE)`),
Naive = NAIVE(`Amount of Natural gas (BOE)`),
SNaive = SNAIVE(`Amount of Natural gas (BOE)`),
Drift = RW(`Amount of Natural gas (BOE)` ~ drift())
)
nat_gas_fit
nat_gas_fc <- nat_gas_fit %>%
forecast(h = 36)
nat_gas_fc
accuracy(nat_gas_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE)
nat_gas_fc %>%
autoplot(
oecd_nat_gas_agg,
level = NULL) +
labs(
y = "Amount of natural gas (MMcf)",
title = "Forecasts for U.S. Natural gas exports to OECD Europe") +
guides(colour = guide_legend(title = "Forecast"))
naive_nat_gas <- nat_gas_train %>%
model(NAIVE(nat_gas_train$Total_Exports))
#not working
augment(naive_nat_gas) %>%
ggplot(aes(x = nat_gas_train$Date))+
geom_line(aes(y = nat_gas_train$`Amount of Natural gas (MMcf)`, colour = 'Data')) +
geom_abline(aes(y = .ftted, colour = 'Fitted'))
#All residual diagnostic graphs
gg_tsresiduals(naive_nat_gas)
#plotting all residuals
augment(naive_nat_gas) %>%
autoplot(.resid) +
labs(y = 'Amount of Natural gas (MMcf)',
title = 'Residuals from the Naive model')
#Histogram
augment(naive_nat_gas) %>%
ggplot(aes(x = .resid)) +
geom_histogram(bins = 50) +
labs(title = 'Histogram of naive model residuals')
#ACF
augment(naive_nat_gas) %>%
ACF(.resid) %>%
autoplot() + labs(title = 'ACF of residuals')
#ACF
augment(naive_nat_gas) %>%
ACF(.resid) %>%
autoplot() + labs(title = 'ACF of residuals')
augment(mean_oil_prod) %>%
features(.resid, ljung_box, lag = 50)
combined_accuracy <- accuracy(crude_oil_fit) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE, MASE, RMSSE) %>%
bind_rows(
accuracy(add),
accuracy(crude_fit)
)
combined_accuracy
